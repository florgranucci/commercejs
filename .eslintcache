[{"D:\\e_commerce\\src\\index.js":"1","D:\\e_commerce\\src\\App.js":"2","D:\\e_commerce\\src\\components\\Products\\Products.js":"3","D:\\e_commerce\\src\\components\\Products\\Product.js":"4","D:\\e_commerce\\src\\components\\Products\\styles.js":"5","D:\\e_commerce\\src\\components\\index.js":"6","D:\\e_commerce\\src\\components\\NavBar\\Navbar.js":"7","D:\\e_commerce\\src\\components\\NavBar\\styles.js":"8","D:\\e_commerce\\src\\components\\Products\\productsStyles.js":"9","D:\\e_commerce\\src\\lib\\commerce.js":"10","D:\\e_commerce\\src\\components\\Cart\\Cart.js":"11","D:\\e_commerce\\src\\components\\Cart\\styles.js":"12","D:\\e_commerce\\src\\components\\Cart\\CartItems\\CartItem.js":"13","D:\\e_commerce\\src\\components\\Cart\\CartItems\\styles.js":"14","D:\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.js":"15","D:\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"16","D:\\e_commerce\\src\\components\\CheckoutForm\\AddressForm.js":"17","D:\\e_commerce\\src\\components\\CheckoutForm\\PaymentForm.js":"18","D:\\e_commerce\\src\\components\\CheckoutForm\\CustomTextField.js":"19","D:\\e_commerce\\src\\components\\CheckoutForm\\Review.js":"20"},{"size":151,"mtime":1610798967117,"results":"21","hashOfConfig":"22"},{"size":2717,"mtime":1610981491664,"results":"23","hashOfConfig":"22"},{"size":657,"mtime":1610836393713,"results":"24","hashOfConfig":"22"},{"size":1303,"mtime":1610836390652,"results":"25","hashOfConfig":"22"},{"size":426,"mtime":1610807519891,"results":"26","hashOfConfig":"22"},{"size":235,"mtime":1610885810686,"results":"27","hashOfConfig":"22"},{"size":1492,"mtime":1610883688697,"results":"28","hashOfConfig":"22"},{"size":1633,"mtime":1610808765203,"results":"29","hashOfConfig":"22"},{"size":298,"mtime":1610809531425,"results":"30","hashOfConfig":"22"},{"size":129,"mtime":1610811070789,"results":"31","hashOfConfig":"22"},{"size":1780,"mtime":1610886335360,"results":"32","hashOfConfig":"22"},{"size":597,"mtime":1610837435119,"results":"33","hashOfConfig":"22"},{"size":1255,"mtime":1610885140396,"results":"34","hashOfConfig":"22"},{"size":349,"mtime":1610838426748,"results":"35","hashOfConfig":"22"},{"size":3202,"mtime":1610981198527,"results":"36","hashOfConfig":"22"},{"size":1208,"mtime":1610886309547,"results":"37","hashOfConfig":"22"},{"size":5047,"mtime":1610974661076,"results":"38","hashOfConfig":"22"},{"size":2468,"mtime":1610981715613,"results":"39","hashOfConfig":"22"},{"size":589,"mtime":1610979844833,"results":"40","hashOfConfig":"22"},{"size":970,"mtime":1610980607478,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"je2d64",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\e_commerce\\src\\index.js",[],["85","86"],"D:\\e_commerce\\src\\App.js",[],"D:\\e_commerce\\src\\components\\Products\\Products.js",[],"D:\\e_commerce\\src\\components\\Products\\Product.js",[],"D:\\e_commerce\\src\\components\\Products\\styles.js",[],"D:\\e_commerce\\src\\components\\index.js",[],"D:\\e_commerce\\src\\components\\NavBar\\Navbar.js",["87","88","89"],"import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Badge,\r\n  MenuItem,\r\n  Menu,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { ShoppingCart } from \"@material-ui/icons\";\r\n\r\nimport logo from \"../../assets/logo.jpg\";\r\nimport useStyles from \"./styles\";\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst Navbar = ({totalItems}) => {\r\n  const classes = useStyles();\r\n\r\n  //to remove the cart icon i we're currently in '/cart'. \r\n  const location = useLocation();\r\n\r\n  //useLocation use property 'path name'\r\n  //if(location.pathname === '/'){\r\n  //}\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n        <Toolbar>\r\n          <Typography component={Link} to='/' variant=\"h6\" className={classes.title} color=\"inherit\">\r\n            <img src={logo} height=\"28px\" className={classes.image} />\r\n            Fitness-Shop\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          {location.pathname === '/' && ( \r\n          <div className={classes.button}>\r\n            {/* <Link to='/cart'>go to cart</Link> */}\r\n            <IconButton component={Link} to='/cart' aria-label=\"Show cart items\" color=\"inherit\">\r\n              <Badge badgeContent={totalItems} color=\"secondary\">\r\n                <ShoppingCart />\r\n              </Badge>\r\n            </IconButton>\r\n          </div> \r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\e_commerce\\src\\components\\NavBar\\styles.js",[],"D:\\e_commerce\\src\\components\\Products\\productsStyles.js",[],"D:\\e_commerce\\src\\lib\\commerce.js",[],"D:\\e_commerce\\src\\components\\Cart\\Cart.js",[],"D:\\e_commerce\\src\\components\\Cart\\styles.js",[],"D:\\e_commerce\\src\\components\\Cart\\CartItems\\CartItem.js",[],"D:\\e_commerce\\src\\components\\Cart\\CartItems\\styles.js",[],"D:\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.js",["90"],"D:\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"D:\\e_commerce\\src\\components\\CheckoutForm\\AddressForm.js",["91","92"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from \"../../lib/commerce\";\r\n\r\nimport CustomTextField from \"./CustomTextField\";\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState(\"\");\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(\r\n      checkoutTokenId\r\n    );\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n      countryCode\r\n    );\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n    console.log(options);\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  //when a country change i'll be able to see the cities of that country\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  //when a city is selected i'll be able to see the shipping option for that country (domestic or international)\r\n  useEffect(() => {\r\n    if (shippingSubdivision)\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubdivision\r\n      );\r\n  }, [shippingSubdivision]);\r\n\r\n  const methods = useForm();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <CustomTextField required name=\"firstName\" label=\"First name\" />\r\n            <CustomTextField required name=\"lastName\" label=\"Last name\" />\r\n            <CustomTextField required name=\"address1\" label=\"Address line 1\" />\r\n            <CustomTextField required name=\"email\" label=\"Email\" />\r\n            <CustomTextField required name=\"city\" label=\"City\" />\r\n            <CustomTextField required name=\"zip\" label=\"Zip / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","D:\\e_commerce\\src\\components\\CheckoutForm\\PaymentForm.js",[],"D:\\e_commerce\\src\\components\\CheckoutForm\\CustomTextField.js",[],"D:\\e_commerce\\src\\components\\CheckoutForm\\Review.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":7,"column":3,"nodeType":"99","messageId":"100","endLine":7,"endColumn":11},{"ruleId":"97","severity":1,"message":"101","line":8,"column":3,"nodeType":"99","messageId":"100","endLine":8,"endColumn":7},{"ruleId":"102","severity":1,"message":"103","line":33,"column":13,"nodeType":"104","endLine":33,"endColumn":71},{"ruleId":"105","severity":1,"message":"106","line":36,"column":6,"nodeType":"107","endLine":36,"endColumn":12,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":52,"column":6,"nodeType":"107","endLine":52,"endColumn":8,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":67,"column":6,"nodeType":"107","endLine":67,"endColumn":27,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["116"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"124","text":"125"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"126","text":"127"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"128","text":"129"},[1308,1314],"[activeStep, cart, history]",[1759,1761],"[checkoutToken.id]",[2243,2264],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]